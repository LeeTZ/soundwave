
<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>

    <title>Shilin Fan's Project</title>

    <link rel="stylesheet" href="TenderNoise.css" type="text/css">

<script src="jsapi"></script>

<script src="jquery.min.js" type="text/javascript"></script>

<script>
  // IE detection 
  var IE = /*@cc_on!@*/false;
    function showAboutUs()
    {
        $('#aboutUsPanel').show();
    }
    
    
    function hideAboutUs()
    {
        $('#aboutUsPanel').hide();
    }
    
   
    $(document).ready(function() 
    {
        $('#header #aboutUs').click(showAboutUs);
        $('#aboutUsPanel #content').click(hideAboutUs);
        // $('#aboutUsPanel').show();        
    });
</script>


</head>


<body>
<script src="http://d3js.org/d3.v3.js"></script>
  
        <div id="header">
            <div id="logo">
                <img src="logo-tn.png">
            </div>
            <div id="caption">
                Do you know the impact of noise around us?
            </div>
            <div id="feedback"><a href="playground.html"  style="text-decoration:none; color: white;">Playground</a></div>
            <div id="separator"></div>
            <div id="aboutUs">About<img style="margin-left:3px;" src="arrow.png"></div>
            <div id="separator"></div>
            <div id="movityLink" style="font-size:12px; font-style:italic; color:#999; margin-top:28px;">Created by Shilin Fan</div>
        </div>

        <div id="aboutUsPanel" style="display:none;">
            <div id="transparent">
            </div>

            <div id="content">
                <span id="aboutUsPanelHeading">About Me</span> <span style="float:right; cursor:pointer;"> <a style="color: white;">[x]</a> </span>
                <div class="horizontalLine"></div>
                <p>My SoundMap (MSM) is an applied acoustic ecology project that collects, 
                   maps and layers noise data across Tsinghua University,exploring the aural
                    quality of streets.</p>
                    <p>
                      Created by Shilin Fan
                    </p>
                <div class="clearboth"></div>
            </div>
        </div>





<svg width="854" height="600" style="display:block;">
 <image x="20" y="20" width="854" height="600" xlink:href="dorm.jpg"/>

 <circle id="c1" cx="240" cy="200" r="20" fill="green" fill-opacity:"0.75" />
 <circle id="c2" cx="240" cy="480" r="40" fill="purple" fill-opacity:"0.75"/>
 <circle id="c3" cx="480" cy="200" r="60" fill="blue" fill-opacity:"0.75"/>
 <circle id="c4" cx="480" cy="480" r="80" fill="red" fill-opacity:"0.75"/>
   <text id="c1text" x="240" y="200" text-anchor="middle" font-family="Georgia" font-size="20px" fill="white">20.34</text>
   <text id="c2text" x="240" y="480" text-anchor="middle" font-family="Georgia" font-size="20px" fill="white">20.34</text>
   <text id="c3text" x="480" y="200" text-anchor="middle" font-family="Georgia" font-size="20px" fill="white">20.34</text>
   <text id="c4text" x="480" y="480" text-anchor="middle" font-family="Georgia" font-size="20px" fill="white">20.34</text>
   <text id="displaytext" x="20" y="570" font-family="Arial" font-size="26px" fill="White"><b>Hi</b></text>
</svg>

<script>
// 对Date的扩展，将 Date 转化为指定格式的String 
// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符， 
// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) 
// 例子： 
// (new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423 
// (new Date()).Format("yyyy-M-d h:m:s.S")      ==> 2006-7-2 8:9:4.18 
Date.prototype.Format = function(fmt) 
{ //author: meizz 
  var o = { 
    "M+" : this.getMonth()+1,                 //月份 
    "d+" : this.getDate(),                    //日 
    "h+" : this.getHours(),                   //小时 
    "m+" : this.getMinutes(),                 //分 
    "s+" : this.getSeconds(),                 //秒 
    "q+" : Math.floor((this.getMonth()+3)/3), //季度 
    "S"  : this.getMilliseconds()             //毫秒 
  }; 
  if(/(y+)/.test(fmt)) 
    fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length)); 
  for(var k in o) 
    if(new RegExp("("+ k +")").test(fmt)) 
  fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length))); 
  return fmt; 
}

var margin = {top: 10, right: 80, bottom: 30, left: 30},
    width = 1000 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

var parseDate = d3.time.format("%Y%m%d").parse;
var parseTime = d3.time.format("%H:%M:%S.%L").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
    .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.temperature); });

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var thedata;
var timeline;
d3.csv("tian.csv", function(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "Time"; }));

  data.forEach(function(d) {
    d.date = parseTime(d.Time);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: +d[name]};
      })
    };
  });

  thedata = cities;
  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .attr("fill","white")
      .style("stroke", "white")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .attr("fill","white")
      .style("stroke", "white")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .attr("fill","white")
      .style("text-anchor", "end")
      .style("stroke", "white")
      .text("Noise (dB)");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .attr("fill","white")
      .text(function(d) { return d.name; });

  timeline = svg.append("line")
                    .attr("id","timeline")
                    .attr("x1",5)
                    .attr("y1",5)
                    .attr("x2",5)
                    .attr("y2",285)
                    .attr("stroke-width", 3)
                    .attr("stroke", "white");
});

function getcolor(db){
    if (db < 70)
    	return "#66FF33";
    else if (db < 90)
    	return "#FF3399";
    else if (db < 100)
    	return "#FF0000";
    else return "#FF6600"; 
}

var timeindex = 0;
var scale = 0.54;
var showtime = new Date(2014,12,4,19,34,44,474);
setInterval(function(){
   var r0 = thedata[0].values[timeindex].temperature;
   d3.select("#c1").attr("r",r0*scale);
   d3.select("#c1").attr("fill",getcolor(r0));
   d3.select("#c1text").text(Math.floor(r0));
   var r1 = thedata[1].values[timeindex].temperature;
   d3.select("#c2").attr("r",r1*scale);
   d3.select("#c2").attr("fill",getcolor(r1));
   d3.select("#c2text").text(Math.floor(r1));
   var r2 = thedata[2].values[timeindex].temperature;
   d3.select("#c3").attr("r",r2*scale);
   d3.select("#c3").attr("fill",getcolor(r2));
   d3.select("#c3text").text(Math.floor(r2));
   var r3 = thedata[3].values[timeindex].temperature;
   d3.select("#c4").attr("r",r3*scale);
   d3.select("#c4").attr("fill",getcolor(r3));
   d3.select("#c4text").text(Math.floor(r3));
   d3.select("#displaytext").text("At " + showtime.Format("hh:mm:ss") + ", the average noise is " + r0.toString() + " dB");
   d3.select("#timeline").attr("x1",Math.floor(5 + timeindex*2.7));
   d3.select("#timeline").attr("x2",Math.floor(5 + timeindex*2.7));
   timeindex++;
   if (timeindex % 8 == 0)
   	showtime.setSeconds(showtime.getSeconds()+1);
   if (timeindex >= 301) inta=window.clearInterval(inta);
}, 100);

</script>
